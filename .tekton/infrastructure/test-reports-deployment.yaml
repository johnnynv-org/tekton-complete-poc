apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-reports-server
  namespace: tekton-pipelines
  labels:
    app: test-reports-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-reports-server
  template:
    metadata:
      labels:
        app: test-reports-server
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: reports-volume
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: reports-volume
        persistentVolumeClaim:
          claimName: test-reports-pvc
      - name: nginx-config
        configMap:
          name: nginx-reports-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-reports-pvc
  namespace: tekton-pipelines
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-reports-config
  namespace: tekton-pipelines
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Enable directory listing for downloads
        location / {
            try_files $uri $uri/ =404;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
        
        # Set proper MIME types
        location ~* \.(html|css|js)$ {
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(xml|log|txt)$ {
            add_header Content-Disposition "attachment";
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: test-reports-service
  namespace: tekton-pipelines
  labels:
    app: test-reports-server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app: test-reports-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-reports-ingress
  namespace: tekton-pipelines
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: tekton.10.117.3.193.nip.io
      http:
        paths:
          - path: /artifacts(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: test-reports-service
                port:
                  number: 80
